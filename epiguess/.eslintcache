[{"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\index.js":"1","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\serviceWorker.js":"2","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\App.js":"3","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpObject.js":"4","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\EmotionObject.js":"5","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpPupilSize.js":"6","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpPupilOrientation.js":"7","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpTakePicture.js":"8","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\PrevResult.js":"9","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpEyeColor.js":"10","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\Summary.js":"11","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\Result.js":"12","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpObjectData.js":"13","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpMain.js":"14","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpChoosePicture.js":"15","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpPreGameInstruction.js":"16","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpSelectApproach.js":"17","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\progress-bar.component.js":"18"},{"size":635,"mtime":1608283321934,"results":"19","hashOfConfig":"20"},{"size":5227,"mtime":1608283322095,"results":"21","hashOfConfig":"20"},{"size":13637,"mtime":1619704517635,"results":"22","hashOfConfig":"20"},{"size":525,"mtime":1608283320705,"results":"23","hashOfConfig":"20"},{"size":771,"mtime":1608283320704,"results":"24","hashOfConfig":"20"},{"size":3091,"mtime":1608283320706,"results":"25","hashOfConfig":"20"},{"size":4318,"mtime":1608283320706,"results":"26","hashOfConfig":"20"},{"size":1190,"mtime":1611222185434,"results":"27","hashOfConfig":"20"},{"size":2155,"mtime":1619701034037,"results":"28","hashOfConfig":"20"},{"size":7347,"mtime":1611222188788,"results":"29","hashOfConfig":"20"},{"size":5040,"mtime":1611222189143,"results":"30","hashOfConfig":"20"},{"size":7277,"mtime":1619705171536,"results":"31","hashOfConfig":"20"},{"size":4088,"mtime":1619700862741,"results":"32","hashOfConfig":"20"},{"size":2481,"mtime":1611222188794,"results":"33","hashOfConfig":"20"},{"size":5432,"mtime":1611222188783,"results":"34","hashOfConfig":"20"},{"size":8568,"mtime":1619703555026,"results":"35","hashOfConfig":"20"},{"size":2754,"mtime":1611222188812,"results":"36","hashOfConfig":"20"},{"size":960,"mtime":1608283322094,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5osbe3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\index.js",[],["83","84"],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\serviceWorker.js",[],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\App.js",["85","86","87","88","89","90","91","92","93","94"],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpObject.js",["95","96","97"],"class ExpObject{\r\n    constructor() {\r\n        this.expObject = [{expOne: []}, {expTwo: []}, {expThree: []}];\r\n        \r\n    }\r\n    \r\n    addEmotionObject(expNumber, emotionObject){\r\n        if (expNumber == 1){\r\n            this.expObject[0].expOne.push(emotionObject);\r\n\r\n        }else if (expNumber == 2){\r\n            this.expObject[1].expTwo.push(emotionObject);\r\n\r\n        }else if (expNumber == 3){\r\n            this.expObject[2].expThree.push(emotionObject);\r\n\r\n        }\r\n    }\r\n     \r\n}\r\n\r\nexport default ExpObject;","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\EmotionObject.js",[],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpPupilSize.js",["98","99","100","101","102"],"import React from 'react';\r\nimport ai_image from './images/abstract_ai.jpg'\r\nimport profilePic from './images/profilePic.jpg';\r\n\r\nclass ExpPupilSize extends React.Component{\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    //Transition to the next path/state\r\n    handleClick = (event, path) => {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    //If any emotion is chosen it will directly update the expObject param in this.state received from parent\r\n    //Trigger parent method UpdateExp()\r\n    //increasing the emotion category chosen by one\r\n    handleEmotionChange = (emotionId) => {\r\n        let tempEmotionsObj = [...this.props.emotionsObject];\r\n        let tempExpObject = [...this.props.expObject[this.props.currentState].expTwo];\r\n        tempEmotionsObj.map(emObj =>{\r\n            emObj.emotions.map(emotion=>{\r\n                if (emotion.id === emotionId){\r\n                    emotion.boolean = !emotion.boolean;\r\n                    tempExpObject.map(expEmotion =>{\r\n                        if (expEmotion.emotionCat == emObj.emotionCat){\r\n                            emotion.boolean ? expEmotion.value += 1 : expEmotion.value -= 1;\r\n                            this.props.callbackFromParent(tempExpObject);\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    //Simply render the different emotionsObject received from the parent\r\n    renderItems = () => {\r\n        const data = this.props.emotionsObject;\r\n        const mapRows = data.map(emotionObj => (\r\n            emotionObj.emotions.map(emotion => (\r\n                <React.Fragment key = {emotion.id}>\r\n                    <button\r\n                    onClick={() => this.handleEmotionChange(emotion.id)}\r\n                    className={emotion.boolean ? 'btn btn-light btn-rounded selected' : 'btn btn-light btn-rounded deselected'}\r\n                    value = {emotion.id}>\r\n                        {emotion.emotion}\r\n                    </button>\r\n                </React.Fragment>\r\n            ))\r\n        ));\r\n        return mapRows;\r\n      };\r\n    \r\n    //Trigger parent method exiExp() and return to home-page\r\n    exitExperiment = (event) => {\r\n        this.props.callbackFromParentExit();\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div className=\"experiment-wrapper\" style={{backgroundImage: `url(${ai_image}` }}>\r\n                <div className=\"experiment-buttons\">\r\n                    <button  onClick={(e) => this.exitExperiment(e)} type=\"submit\" className=\"btn btn-danger\">Avbryt</button>\r\n                    <button  onClick={(e) => this.handleClick(e, '/PrevResult')} type=\"submit\" className=\"btn btn-success button-next\">NÃ¤sta</button>\r\n                </div>\r\n                <div  className=\"experiment-options\" >\r\n                    <div onClick={(e) => this.handleEmotionChange(e)}>\r\n                        {this.renderItems()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpPupilSize;","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpPupilOrientation.js",["103","104","105","106","107"],"import React from 'react';\r\nimport ai_image from './images/abstract_ai.jpg';\r\nimport profilePic from './images/profilePic.jpg';\r\n\r\nclass ExpPupilOrientation extends React.Component{\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    //Transition to the next path/state\r\n    handleClick = (event, path) => {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    //If any emotion is chosen it will directly update the expObject param in this.state received from parent\r\n    //Trigger parent method UpdateExp()\r\n    //increasing the emotion category chosen by one\r\n    handleEmotionChange = (emotionId) => {\r\n        let tempEmotionsObj = [...this.props.emotionsObject];\r\n        let tempExpObject = [...this.props.expObject[this.props.currentState].expThree];\r\n        tempEmotionsObj.map(emObj =>{\r\n            emObj.emotions.map(emotion=>{\r\n                if (emotion.id === emotionId){\r\n                    emotion.boolean = !emotion.boolean;\r\n                    tempExpObject.map(expEmotion =>{\r\n                        if (expEmotion.emotionCat == emObj.emotionCat){\r\n                            emotion.boolean ? expEmotion.value += 1 : expEmotion.value -= 1;\r\n                            this.props.callbackFromParent(tempExpObject);\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    //Simply render the different emotionsObject received from the parent\r\n    renderItems = () => {\r\n        const data = this.props.emotionsObject;\r\n        const mapRows = data.map(emotionObj => (\r\n            emotionObj.emotions.map(emotion => (\r\n                <React.Fragment key = {emotion.id}>\r\n                    <button\r\n                    onClick={() => this.handleEmotionChange(emotion.id)}\r\n                    className={emotion.boolean ? 'btn btn-light btn-rounded selected' : 'btn btn-light btn-rounded deselected'}\r\n                    value = {emotion.id}>\r\n                        {emotion.emotion}\r\n                    </button>\r\n                </React.Fragment>\r\n            ))\r\n        ));\r\n        return mapRows;\r\n      };\r\n    \r\n    //Trigger parent method exiExp() and return to home-page\r\n    exitExperiment = (event) => {\r\n        this.props.callbackFromParentExit();\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <Container>\r\n            //     <Row>\r\n            //         <Col xs={2}><img src={profilePic}/></Col>\r\n            //         <Col xs={7}>\r\n            //             <div  className=\"p-3 mb-2 bg-info text-white\" style={{backgroundImage: `url(${ai_image}` }}>\r\n            //                 <div required  multiple={true} id=\"emotionSelect\"  type=\"button\"  onClick={(e) => this.handleEmotionChange(e)}>\r\n            //                     {this.renderItems()}\r\n            //                 </div>\r\n            //             </div>\r\n            //         </Col>\r\n            //         <Col xs={1}>\r\n            //             <div className=\"\">\r\n            //                 <button  onClick={(e) => this.exitExperiment(e)} type=\"submit\" className=\"btn btn-danger\">Avbryt</button>\r\n            //                 <button  onClick={(e) => this.handleClick(e, '/PrevResult')} type=\"submit\" className=\"btn btn-success\">NÃ¤sta</button>\r\n            //             </div>\r\n            //         </Col>\r\n            //     </Row>\r\n            // </Container>\r\n            <div className=\"experiment-wrapper\" style={{backgroundImage: `url(${ai_image}` }}>\r\n                <div className=\"experiment-buttons\">\r\n                    <button  onClick={(e) => this.exitExperiment(e)} type=\"submit\" className=\"btn btn-danger\">Avbryt</button>\r\n                    <button  onClick={(e) => this.handleClick(e, '/PrevResult')} type=\"submit\" className=\"btn btn-success button-next\">NÃ¤sta</button>\r\n                </div>\r\n                <div  className=\"experiment-options\" >\r\n                    <div onClick={(e) => this.handleEmotionChange(e)}>\r\n                        {this.renderItems()}\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"experiment-image\">\r\n                    <img src={this.props.selectedImage}/>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpPupilOrientation;","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpTakePicture.js",[],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\PrevResult.js",["108","109","110"],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpEyeColor.js",["111","112","113","114","115","116","117","118","119","120","121","122"],"import React from 'react';\r\nimport ai_image from './images/abstract_ai.jpg';\r\nimport profilePic from './images/profilePic.jpg';\r\nimport { OverlayTrigger, Tooltip, Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nvar selectedCount = 0;\r\n\r\nconst chooseText = {\r\n    color: 'black',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    paddingTop: '30px'\r\n}\r\n\r\nconst choosewrapper = {\r\n    textAlign: 'center'\r\n}\r\n\r\nconst experimentOptions = {\r\n    maxWidth: '70%',\r\n    marginLeft: '150px',\r\n    paddingTop: '30px'\r\n}\r\n\r\nconst buttonWrapper = {\r\n    paddingTop: '20px',\r\n    paddingBottom: '50px'\r\n}\r\n\r\nconst chooseButton = {\r\n    marginLeft: '25px',\r\n    marginRight: '25px',\r\n    width: '150px',\r\n    height: '50px',\r\n    fontSize: '22px'\r\n}\r\n\r\nconst buttonRed = {\r\n    marginLeft: '25px',\r\n    marginRight: '25px',\r\n    width: '150px',\r\n    height: '50px',\r\n    fontSize: '22px',\r\n    backgroundColor: '#f44336',\r\n    color: 'white'\r\n}\r\n\r\nclass ExpEyeColor extends React.Component{\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectedCount = 0;\r\n    }\r\n\r\n\r\n    disableButton = () => {\r\n        // if(selectedCount <= 0 || selectedCount > 5)\r\n        // console.log(selectedCount);\r\n        if(selectedCount != 1)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    //Transition to the next path/state\r\n    handleClick = (event, path) => {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    //If any emotion is chosen it will directly update the expObject param in this.state received from parent\r\n    //Trigger parent method UpdateExp()\r\n    //increasing the emotion category chosen by one\r\n    // handleEmotionChange = (emotion, emotionId) => {\r\n    //     console.log(emotion);\r\n    //     // console.log(emotionId);\r\n    //     // console.log(this.props.emotionsObject);\r\n    //     // console.log(this.props.expObject);\r\n    //     let tempEmotionsObj = [...this.props.emotionsObject];\r\n    //     let tempExpObject = [...this.props.expObject[0].expOne];\r\n    //     tempEmotionsObj.map(emObj =>{\r\n    //         emObj.emotions.map(emotion=>{\r\n    //             if (emotion.id === emotionId){\r\n    //                 emotion.boolean = !emotion.boolean;\r\n    //                 tempExpObject.map(expEmotion =>{\r\n    //                     if (expEmotion.emotionCat == emObj.emotionCat){\r\n    //                         debugger;\r\n    //                         emotion.boolean ? expEmotion.value += 1 : expEmotion.value -= 1;\r\n    //                         emotion.boolean ? selectedCount += 1 : selectedCount -= 1;\r\n    //                         this.props.callbackFromParent(tempExpObject, emotion);\r\n    //                     }\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     })\r\n    //     this.forceUpdate();\r\n    // }\r\n\r\n    handleEmotionChange = (emotion, emotionId) => {\r\n        // console.log(emotion);\r\n        // console.log(emotionId);\r\n        // console.log(emotionId);\r\n        // console.log(this.props.emotionsObject);\r\n        // console.log(this.props.expObject);\r\n        let tempEmotionsObj = [...this.props.emotionsObject];\r\n        // console.log(tempEmotionsObj);\r\n        let tempExpObject = [...this.props.expObject[0].expOne];\r\n        // console.log(tempExpObject);\r\n        tempEmotionsObj.map(emObj =>{\r\n            emObj.emotions.map(emotion=>{\r\n                if (emotion.id === emotionId){\r\n                    emotion.boolean = !emotion.boolean;\r\n                    tempExpObject.map(expEmotion =>{\r\n                        if (expEmotion.emotionCat == emObj.emotionCat){\r\n                            // debugger;\r\n                            emotion.boolean ? emotion.value += 1 : emotion.value -= 1;\r\n                            emotion.boolean ? selectedCount += 1 : selectedCount -= 1;\r\n                            console.log('selectedCount ' + selectedCount);\r\n                            this.props.callbackFromParent(tempExpObject, emotion);\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        // this.forceUpdate();\r\n    }\r\n\r\n    //Simply render the different emotionsObject received from the parent\r\n    renderItems = () => {\r\n        const data = this.props.emotionsObject;\r\n        const mapRows = data.map(emotionObj => (\r\n            emotionObj.emotions.map(emotion => (\r\n                <React.Fragment key = {emotion.id}>\r\n                    <button\r\n                    onClick={() => this.handleEmotionChange(emotion, emotion.id)}\r\n                    className={emotion.boolean ? 'btn btn-light btn-rounded selected' : 'btn btn-light btn-rounded deselected'}\r\n                    value = {emotion.id}>\r\n                        {emotion.emotion}\r\n                    </button>\r\n                </React.Fragment>\r\n            ))\r\n        ));\r\n        return mapRows;\r\n      };\r\n\r\n    //Trigger parent method exiExp() and return to home-page\r\n    exitExperiment = (event) => {\r\n        this.props.callbackFromParentExit();\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <Container>\r\n            //     <Row>\r\n            //         <Col xs={2}><img src={profilePic}/></Col>\r\n            //         <Col xs={7}>\r\n            //             <div  className=\"p-3 mb-2 bg-info text-white\" style={{backgroundImage: `url(${ai_image}` }}>\r\n            //                 <div required  multiple={true} id=\"emotionSelect\"  type=\"button\"  onClick={(e) => this.handleEmotionChange(e)}>\r\n            //                     {this.renderItems()}\r\n            //                 </div>\r\n            //             </div>\r\n            //         </Col>\r\n            //         <Col xs={1}>\r\n            //             <div className=\"\">\r\n            //                 <button  onClick={(e) => this.exitExperiment(e)} type=\"submit\" className=\"btn btn-danger\">Avbryt</button>\r\n            //                 <button  onClick={(e) => this.handleClick(e, '/PrevResult')} type=\"submit\" className=\"btn btn-success\">NÃ¤sta</button>\r\n            //             </div>\r\n            //         </Col>\r\n            //     </Row>\r\n            // </Container>\r\n            <div className=\"\">\r\n                <div style={choosewrapper}>\r\n                    <div style={chooseText}>Gissa vilken kÃ¤nsla Epi fÃ¶rsÃ¶kte visa!</div>\r\n\r\n                    <div  style={experimentOptions} >\r\n                        <div onClick={(e) => this.handleEmotionChange(e)}>\r\n                            {this.renderItems()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={buttonWrapper}>\r\n                        <button style={buttonRed} onClick={(e) => this.exitExperiment(e)} type=\"submit\" className=\"btn\">Avbryt</button>\r\n                        <Button style={chooseButton} disabled={this.disableButton()} onClick={(e) => this.handleClick(e, '/Result')} type=\"submit\" className=\"btn btn-primary button-next\">NÃ¤sta</Button>\r\n                    </div>\r\n                    {/* <div className=\"experiment-image\">\r\n                        <img src={this.props.selectedImage}/>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpEyeColor;","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\Summary.js",["123","124","125","126","127","128","129"],"import React from 'react';\r\n\r\nlet summary = [];\r\n\r\nconst summaryMainWrapper = {\r\n    textAlign: 'center'\r\n}\r\n\r\nconst summaryHeader = {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    padding: '50px'\r\n}\r\n\r\nconst summaryWrapper = {\r\n    width: '100%',\r\n    paddingBottom: '20px'\r\n}\r\n\r\nconst summaryImage = {\r\n    maxWidth: '200px'\r\n}\r\n\r\nconst summaryImageEpi = {\r\n    maxWidth: '200px',\r\n    marginLeft: '50px'\r\n}\r\n\r\nconst summaryGuess = {\r\n    display: 'inline-block'\r\n}\r\n\r\nconst score = {\r\n    display: 'inline-block',\r\n    width: '50%',\r\n    fontWeight: 'bold',\r\n    textAlign: 'left',\r\n    paddingBottom: '30px'\r\n}\r\n\r\nconst finalScore = {\r\n    textAlign: 'center',\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    paddingTop: '20px',\r\n    paddingBottom: '20px'\r\n}\r\n\r\nconst answerWrapper = {\r\n    display: 'inline-block',\r\n    maxWidth: '200px',\r\n    textAlign: 'left',\r\n    paddingLeft: '25px'\r\n}\r\n\r\nconst exitButton = {\r\n    display: 'inline-block',\r\n    position: 'sticky',\r\n    bottom: '0',\r\n    float: 'right',\r\n    backgroundColor: 'white',\r\n    paddingTop: '0px',\r\n    paddingBottom: '20px',\r\n    width: '100%'\r\n}\r\n\r\nvar epiResultCount = 0;\r\nvar userResultCount = 0;\r\nvar totalCount = 0;\r\n\r\nclass Summary extends React.Component {\r\n    constructor(props){\r\n        super();\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(this.props.guessResults);\r\n    }\r\n\r\n    calcEpiResults = () =>{\r\n        \r\n    }\r\n\r\n    exitExperiment = (event) => {\r\n        this.props.callbackFromParent();\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    getHighestEmotion(faceRecEmotions){\r\n        return Object.keys(faceRecEmotions).reduce((a, b) => faceRecEmotions[a] > faceRecEmotions[b] ? a : b);\r\n    }\r\n\r\n    renderEpiResult = (epiGuess)=>{\r\n        // console.log(epiGuess);\r\n        if(epiGuess == true){\r\n          return <div>Du angav: rÃ¤tt!<div>PoÃ¤ng: 1</div></div>\r\n        } else{\r\n          return <div>Du angav: fel!<div>PoÃ¤ng: 0</div></div>\r\n        }\r\n    }\r\n\r\n    renderUserResult = (userGuess)=>{\r\n        console.log(userGuess);\r\n        if(userGuess.value.guesses[0].catId == userGuess.value.epiEmotion.id){\r\n            return <div>PoÃ¤ng: 1</div>\r\n        } else{\r\n            return <div><div>Epi fÃ¶rsÃ¶kte vara: {userGuess.value.epiEmotion.faceRecEmotion}</div>PoÃ¤ng: 0</div>\r\n        }\r\n    }\r\n\r\n    renderResultSummary(){\r\n        const sum = Object.entries(this.props.guessResults);\r\n\r\n        sum.forEach(([key, value]) => {\r\n            summary.push({key: key, value: value});\r\n        })\r\n\r\n        this.props.guessResults.forEach(result => {\r\n            // console.log(result.epiGuess);\r\n            if(result.epiGuess == true) epiResultCount += 1;\r\n            if(result.guesses[0].catId == result.epiEmotion.id) userResultCount += 1;\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {summary.map((item) => ( \r\n                        <div style={summaryWrapper}>\r\n                            <img style={summaryImage} src={item.value.selectedImage} />\r\n                            <div style={answerWrapper}>\r\n                                <div style={summaryGuess}>Epi gissade: {this.getHighestEmotion(item.value.faceRecEmotions)}</div>\r\n                                <div style={summaryGuess}>{this.renderEpiResult(item.value.epiGuess)}</div>\r\n                            </div>\r\n                            <img style={summaryImageEpi} src={item.value.epiEmotion.resultImages[0].src} />\r\n                            <div style={answerWrapper}>\r\n                                <div style={summaryGuess}>Du gissade: {item.value.guesses[0].emotion}</div>\r\n                                <div style={summaryGuess}>{this.renderUserResult(item)}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div>\r\n                    <div style={score}>Epi gissade rÃ¤tt pÃ¥ {epiResultCount} av {this.props.guessResults.length} emotioner</div>\r\n                    <div style={score}>Du gissade rÃ¤tt pÃ¥ {userResultCount} av {this.props.guessResults.length} emotioner</div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={summaryMainWrapper}>\r\n                <div style={summaryHeader}>\r\n                    Sammanfattning av dina och EpiÂ´s gissningar:\r\n                </div>\r\n                <div>\r\n                    {this.renderResultSummary()}\r\n                </div>\r\n                <div className=\"jumbotron text-center stickyfooter\" style={exitButton}>\r\n                    <div style={finalScore}>Tillsammans fick ni {epiResultCount + userResultCount} av {this.props.guessResults.length * 2} poÃ¤ng, bra jobbat!</div>\r\n                    <button  onClick={(e) => this.exitExperiment(e)} type=\"submit\" className=\"btn btn-primary\">Avsluta</button>  \r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Summary;","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\Result.js",["130","131","132","133","134","135","136","137","138","139","140","141"],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpObjectData.js",["142"],"/* Make room for more extensive data collection */\r\n\r\nexport const objectList = [\r\n    { \r\n        id: 1, \r\n        emotionCat: \"Anger\", \r\n        faceRecEmotion: 'angry',\r\n        boolean: false,\r\n        value: 0,\r\n        barColor: \"#FB525A\",\r\n        emotions: [\r\n            {id: 11, catId: 1,  emotion: 'Arg', boolean: false}//,\r\n            // {id: 12, catId: 1,  emotion: 'Hotad', boolean: false},\r\n            // {id: 13, catId: 1,  emotion: 'StÃ¶tt', boolean: false}\r\n        ],\r\n        resultImages: [\r\n            {id: 1, order: 1, src: '/images/Arg3.jpg', emVidSrc: '/videos/Arg3.mp4'}\r\n        ],\r\n        epiRecID: 1\r\n    },\r\n    { \r\n        id: 2, \r\n        emotionCat: \"Happiness\", \r\n        faceRecEmotion: 'happy',\r\n        boolean: false,\r\n        barColor: \"#FFD65D\",\r\n        value: 0,\r\n        emotions: [\r\n            {id: 14, catId: 2, emotion: 'Glad', boolean: false}//,\r\n            // {id: 15, catId: 2, emotion: 'Begeistrad', boolean: false},\r\n            // {id: 16, catId: 2, emotion: 'SjÃ¤lvsÃ¤ker', boolean: false}\r\n        ],\r\n        resultImages: [\r\n            {id: 1, order: 1, src: '/images/Glad3.jpg', emVidSrc: './videos/Glad3.mp4'}\r\n        ],\r\n        epiRecID: 3\r\n    },\r\n    { \r\n        id: 3, \r\n        emotionCat: \"Sadness\", \r\n        faceRecEmotion: 'sad',\r\n        boolean: false,\r\n        value: 0,\r\n        barColor: \"#2884C6\",\r\n        emotions: [\r\n            {id: 17, catId: 3,  emotion: 'Ledsen', boolean: false}//,\r\n            // {id: 18, catId: 3,  emotion: 'SÃ¥rad', boolean: false},\r\n            // {id: 19, catId: 3,  emotion: 'Ensam', boolean: false}\r\n        ],\r\n        resultImages: [\r\n            {id: 1, order: 1, src: '/images/Ledsen3.jpg', emVidSrc: '/videos/Ledsen3.mp4'},\r\n        ],\r\n        epiRecID: 2\r\n    },\r\n    { \r\n        id: 4, \r\n        emotionCat: \"Surprise\", \r\n        faceRecEmotion: 'surprised',\r\n        boolean: false,\r\n        value: 0,\r\n        barColor: \"#67F4D8\",\r\n        emotions: [\r\n            {id: 20, catId: 4,  emotion: 'Ãveraskad', boolean: false}//,\r\n            // {id: 21, catId: 4,  emotion: 'FÃ¶rvÃ¥nad', boolean: false},\r\n            // {id: 22, catId: 4,  emotion: 'UppskrÃ¤md', boolean: false}\r\n        ],\r\n        resultImages: [\r\n            {id: 1, order: 1, src: '/images/Ãveraskad3.jpg', emVidSrc: '/videos/Ãveraskad3.mp4'}\r\n        ],\r\n        epiRecID: 6\r\n    },\r\n    { \r\n        id: 5, \r\n        emotionCat: \"Fear\", \r\n        faceRecEmotion: 'fearful',\r\n        boolean: false,\r\n        value: 0,\r\n        barColor: \"#784DA3\",\r\n        emotions: [\r\n            {id: 23, catId: 5,  emotion: 'RÃ¤dd', boolean: false}//,\r\n            // {id: 24, catId: 5,  emotion: 'Orolig', boolean: false},\r\n            // {id: 25, catId: 5,  emotion: 'OsÃ¤ker', boolean: false}\r\n        ],\r\n        resultImages: [\r\n            {id: 1, order: 1, src: '/images/RÃ¤dd3.jpg', emVidSrc: '/videos/RÃ¤dd3.mp4'}\r\n        ],\r\n        epiRecID: 4\r\n    },\r\n    { \r\n        id: 6, \r\n        emotionCat: \"Disgust\", \r\n        faceRecEmotion: 'disgusted',\r\n        boolean: false,\r\n        value: 0,\r\n        barColor: \"#3CA938\",\r\n        emotions: [\r\n            {id: 26, catId: 6,  emotion: 'Ãcklad', boolean: false}//,\r\n            // {id: 27, catId: 6,  emotion: 'FÃ¶rnÃ¤rmad', boolean: false},\r\n            // {id: 28, catId: 6,  emotion: 'Motvillig', boolean: false}\r\n        ],\r\n        resultImages: [\r\n            {id: 1, order: 1, src: '/images/Ãcklad3.jpg', emVidSrc: '/videos/Ãcklad3.mp4'}\r\n        ],\r\n        epiRecID: 5\r\n    },\r\n    { \r\n        id: 7, \r\n        emotionCat: \"Neutral\", \r\n        faceRecEmotion: 'neutral',\r\n        boolean: false,\r\n        value: 0,\r\n        barColor: \"#FFFFFF\",\r\n        emotions: [\r\n            {id: 29, catId: 7,  emotion: 'Neutral', boolean: false}//,\r\n            // {id: 30, catId: 7,  emotion: 'Likgiltig', boolean: false}\r\n        ],\r\n        resultImages: [\r\n            {id: 1, order: 1, src: '/images/Neutral.jpg', emVidSrc: '/videos/Neutral3.mp4'}\r\n        ],\r\n        epiRecID: 0\r\n    }      \r\n]\r\n\r\nexport default {\r\n    objectList,\r\n}","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpMain.js",[],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpChoosePicture.js",["143"],"import React from 'react';\r\n// import ImageGallery from 'react-image-gallery';\r\n// import \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport {Carousel} from 'react-responsive-carousel';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport $ from 'jquery';\r\n\r\nconst images = [\r\n    {\r\n        id: 1436436,\r\n        original: '/images/EpiImage.jpg',\r\n        thumbnail: '/images/EpiImage.jpg',\r\n      },\r\n      {\r\n        id: 164363,\r\n        original: '/images/EpiImage2.jpg',\r\n        thumbnail: '/images/EpiImage2.jpg',\r\n      },\r\n      {\r\n        id: 1344,\r\n        original: '/images/EpiImage3.jpg',\r\n        thumbnail: '/images/EpiImage.jpg',\r\n      },\r\n      {\r\n        id: 1456,\r\n        original: '/images/EpiImage4.jpg',\r\n        thumbnail: '/images/EpiImage4.jpg',\r\n      },\r\n      {\r\n        id: 1345,\r\n        original: '/images/EpiImage5.jpg',\r\n        thumbnail: '/images/EpiImage5.jpg',\r\n      },\r\n      {\r\n        id: 145,\r\n        original: '/images/EpiImage.jpg',\r\n        thumbnail: '/images/EpiImage6.jpg',\r\n      },\r\n    {\r\n      id: 1,\r\n      original: '/images/anger1.jpg',\r\n      thumbnail: '/images/anger1.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      original: '/images/anger2.jpg',\r\n      thumbnail: '/images/anger2.jpg',\r\n    //   legend: 'bild 2',\r\n    },\r\n    {\r\n        id: 3,\r\n        original: '/images/anger3.jpg',\r\n        thumbnail: '/images/anger3.jpg',\r\n    },\r\n    {\r\n        id: 4,\r\n        original: '/images/anger4.jpg',\r\n        thumbnail: '/images/anger4.jpg',\r\n    },\r\n    {\r\n        id: 5,\r\n        original: '/images/stock_disgusted2.jpg',\r\n        thumbnail: '/images/stock_disgusted2.jpg',\r\n    },\r\n    {\r\n        id: 6,\r\n        original: '/images/disgust1.jpg',\r\n        thumbnail: '/images/disgust1.jpg',\r\n    },\r\n    {\r\n        id: 7,\r\n        original: '/images/disgust2.jpg',\r\n        thumbnail: '/images/disgust2.jpg',\r\n    },\r\n    {\r\n        id: 8,\r\n        original: '/images/disgust4.jpg',\r\n        thumbnail: '/images/disgust4.jpg',\r\n    },\r\n    {\r\n        id: 9,\r\n        original: '/images/fear1.jpg',\r\n        thumbnail: '/images/fear1.jpg',\r\n    },\r\n    {\r\n        id: 10,\r\n        original: '/images/fear2.jpg',\r\n        thumbnail: '/images/fear2.jpg',\r\n    },\r\n    {\r\n        id: 12,\r\n        original: '/images/joy2.jpg',\r\n        thumbnail: '/images/joy2.jpg',\r\n        legend: 'joy2',\r\n    },\r\n    {\r\n        id: 13,\r\n        original: '/images/joy3.jpg',\r\n        thumbnail: '/images/joy3.jpg',\r\n    },\r\n    {\r\n        id: 14,\r\n        original: '/images/joy4.jpg',\r\n        thumbnail: '/images/joy4.jpg',\r\n    },\r\n    {\r\n        id: 15,\r\n        original: '/images/sad1.jpg',\r\n        thumbnail: '/images/sad1.jpg',\r\n    },\r\n    {\r\n        id: 16,\r\n        original: '/images/sad2.jpg',\r\n        thumbnail: '/images/sad2.jpg',\r\n    },\r\n    {\r\n        id: 16,\r\n        original: '/images/surprise1.jpg',\r\n        thumbnail: '/images/surprise1.jpg',\r\n    },\r\n    {\r\n        id: 16,\r\n        original: '/images/surprise2.jpg',\r\n        thumbnail: '/images/surprise2.jpg',\r\n    },\r\n    {\r\n        id: 16,\r\n        original: '/images/surprise3.jpg',\r\n        thumbnail: '/images/surprise3.jpg',\r\n    },\r\n  ];\r\n\r\n  const buttonStyle = {\r\n      marginLeft: '25px',\r\n      marginRight: '25px',\r\n      width: '150px',\r\n      height: '50px',\r\n      fontSize: '22px'\r\n  }\r\n\r\n  const buttonRed = {\r\n    marginLeft: '25px',\r\n    marginRight: '25px',\r\n    width: '150px',\r\n    height: '50px',\r\n    fontSize: '22px',\r\n    backgroundColor: '#f44336',\r\n    color: 'white'\r\n}\r\n\r\nclass ExpChoosePicture extends React.Component{\r\n    constructor(props) {\r\n        super()\r\n    }\r\n\r\n    //Transition to the next path/state\r\n    handleClick = (event, path) => {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    clickedThisBitch = (id) => {\r\n        console.log(\"clickedThisBitch\" + id);\r\n    }\r\n\r\n    choosePicture = (event) => {\r\n        let image = $('.selected img').attr('src');\r\n        console.log(image);\r\n        this.props.callbackFromParent(image); //pass image\r\n        this.handleClick(event, '/ExpPreGameInstruction')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"CarouselWrapper\">\r\n                    <Carousel swipeable={true} showArrows={true}>\r\n                        {images.map((image, index) => {\r\n                            return <div\r\n                                        onClick={() => this.clickedThisBitch(image.id)}\r\n                                        key={image.id}\r\n                                    >\r\n                                    <img src={image.original} />\r\n                                    <p className=\"legend\">{image.legend}</p>\r\n                                    </div>\r\n                            })\r\n                        }\r\n                    </Carousel>\r\n                </div>\r\n                {/* Removed class jumbotron */}\r\n                <div className= \"text-center\"> \r\n                    <button style={buttonRed} onClick={(e) => this.handleClick(e, '/ExpSelectApproach')} type=\"submit\" className=\"btn\">Tillbaka</button>\r\n                    <button style={buttonStyle} onClick={(e) => this.choosePicture(e)} type=\"submit\" className=\"btn btn-primary\">NÃ¤sta</button>\r\n                </div>\r\n                <div className=\"form-group mt-20\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpChoosePicture;","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpPreGameInstruction.js",["144","145","146","147","148","149","150","151"],"C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\ExpSelectApproach.js",["152"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCamera, faCoffee, faImage } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst infoText1 = {\r\n    paddingBottom: '25px',\r\n    fontSize: '32px'\r\n}\r\nconst infoText2 = {\r\n    paddingBottom: '25px'\r\n}\r\n\r\nconst imageSelects = {\r\n    paddingTop: '100px',\r\n    paddingBottom: '100px'\r\n}\r\n\r\nconst background = {\r\n    backgroundColor: 'white'\r\n}\r\n\r\nconst button = {\r\n    marginLeft: '25px',\r\n    marginRight: '25px',\r\n    width: '150px',\r\n    height: '50px',\r\n    fontSize: '22px'\r\n}\r\n\r\nconst buttonRed = {\r\n    marginLeft: '25px',\r\n    marginRight: '25px',\r\n    width: '150px',\r\n    height: '50px',\r\n    fontSize: '22px',\r\n    backgroundColor: '#f44336',\r\n    color: 'white'\r\n}\r\n\r\nclass ExpSelectApproach extends React.Component{\r\n    constructor(props) {\r\n        super()\r\n    }\r\n\r\n    //Transition to the next path/state\r\n    handleClick = (event, path) => {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    //Trigger parent method exiExp() and return to home-page\r\n    exitExperiment = (event) => {\r\n        this.props.callbackFromParent();\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className= \"jumbotron text-center\" style={background}> \r\n                    <div className=\"info-text\" style={infoText1}>\r\n                        Visa en kÃ¤nsla som Epi kan gissa pÃ¥.\r\n                    </div>\r\n                    <div style={infoText2}>\r\n                        LÃ¥t Epi spara en bild av ditt ansiktsuttryck i minnet (Epi har fotografiskt minne) eller vÃ¤lj en bild Ã¥t Epi frÃ¥n galleriet.\r\n                    </div>\r\n                    <div className=\"image-selects\" style={imageSelects}>\r\n                        <div className=\"take\">\r\n                            <FontAwesomeIcon icon={faCamera} />\r\n                            <button style={button} onClick={(e) => this.handleClick(e, '/ExpTakePicture')} type=\"submit\" className=\"btn btn-primary\">Ta bild</button>\r\n                        </div>\r\n                        <div className=\"choose\">\r\n                            <FontAwesomeIcon icon={faImage}/>\r\n                            <button style={button} onClick={(e) => this.handleClick(e, '/ExpChoosePicture')} type=\"submit\" className=\"btn btn-primary\">VÃ¤lj bild</button>\r\n                        </div>\r\n                    </div>\r\n                    <button  style={buttonRed} onClick={(e) => this.exitExperiment(e, '/')} type=\"submit\" className=\"btn\">Avsluta</button>\r\n                </div>\r\n                <div className=\"form-group mt-20\"> </div>\r\n            </div>             \r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpSelectApproach;","C:\\Users\\Sandra\\Desktop\\Projects\\Epi\\EpiUI\\epiguess\\src\\progress-bar.component.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":19},{"ruleId":"157","severity":1,"message":"161","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":20},{"ruleId":"157","severity":1,"message":"162","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":27},{"ruleId":"157","severity":1,"message":"163","line":44,"column":11,"nodeType":"159","messageId":"160","endLine":44,"endColumn":18},{"ruleId":"157","severity":1,"message":"163","line":68,"column":11,"nodeType":"159","messageId":"160","endLine":68,"endColumn":18},{"ruleId":"157","severity":1,"message":"163","line":124,"column":11,"nodeType":"159","messageId":"160","endLine":124,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":135,"column":31,"nodeType":"166","messageId":"167","endLine":135,"endColumn":33},{"ruleId":"164","severity":1,"message":"165","line":136,"column":35,"nodeType":"166","messageId":"167","endLine":136,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":148,"column":33,"nodeType":"170","messageId":"171","endLine":148,"endColumn":35},{"ruleId":"157","severity":1,"message":"172","line":244,"column":9,"nodeType":"159","messageId":"160","endLine":244,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":8,"column":23,"nodeType":"170","messageId":"171","endLine":8,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":11,"column":29,"nodeType":"170","messageId":"171","endLine":11,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":14,"column":29,"nodeType":"170","messageId":"171","endLine":14,"endColumn":31},{"ruleId":"157","severity":1,"message":"173","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":21,"column":35,"nodeType":"166","messageId":"167","endLine":21,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":22,"column":39,"nodeType":"166","messageId":"167","endLine":22,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":25,"column":50,"nodeType":"166","messageId":"167","endLine":25,"endColumn":52},{"ruleId":"168","severity":1,"message":"169","line":26,"column":51,"nodeType":"170","messageId":"171","endLine":26,"endColumn":53},{"ruleId":"157","severity":1,"message":"173","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":21,"column":35,"nodeType":"166","messageId":"167","endLine":21,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":22,"column":39,"nodeType":"166","messageId":"167","endLine":22,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":25,"column":50,"nodeType":"166","messageId":"167","endLine":25,"endColumn":52},{"ruleId":"168","severity":1,"message":"169","line":26,"column":51,"nodeType":"170","messageId":"171","endLine":26,"endColumn":53},{"ruleId":"157","severity":1,"message":"174","line":3,"column":9,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"175","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":11},{"ruleId":"168","severity":1,"message":"176","line":59,"column":22,"nodeType":"170","messageId":"171","endLine":59,"endColumn":24},{"ruleId":"157","severity":1,"message":"177","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"173","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":18},{"ruleId":"157","severity":1,"message":"178","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":24},{"ruleId":"157","severity":1,"message":"179","line":4,"column":26,"nodeType":"159","messageId":"160","endLine":4,"endColumn":33},{"ruleId":"157","severity":1,"message":"180","line":4,"column":43,"nodeType":"159","messageId":"160","endLine":4,"endColumn":52},{"ruleId":"157","severity":1,"message":"181","line":4,"column":54,"nodeType":"159","messageId":"160","endLine":4,"endColumn":57},{"ruleId":"157","severity":1,"message":"182","line":4,"column":59,"nodeType":"159","messageId":"160","endLine":4,"endColumn":62},{"ruleId":"168","severity":1,"message":"176","line":63,"column":26,"nodeType":"170","messageId":"171","endLine":63,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":112,"column":35,"nodeType":"166","messageId":"167","endLine":112,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":113,"column":39,"nodeType":"166","messageId":"167","endLine":113,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":116,"column":50,"nodeType":"166","messageId":"167","endLine":116,"endColumn":52},{"ruleId":"168","severity":1,"message":"169","line":117,"column":51,"nodeType":"170","messageId":"171","endLine":117,"endColumn":53},{"ruleId":"157","severity":1,"message":"183","line":69,"column":5,"nodeType":"159","messageId":"160","endLine":69,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":95,"column":21,"nodeType":"170","messageId":"171","endLine":95,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":104,"column":45,"nodeType":"170","messageId":"171","endLine":104,"endColumn":47},{"ruleId":"168","severity":1,"message":"169","line":120,"column":32,"nodeType":"170","messageId":"171","endLine":120,"endColumn":34},{"ruleId":"168","severity":1,"message":"169","line":121,"column":40,"nodeType":"170","messageId":"171","endLine":121,"endColumn":42},{"ruleId":"184","severity":1,"message":"185","line":129,"column":29,"nodeType":"186","endLine":129,"endColumn":88},{"ruleId":"184","severity":1,"message":"185","line":134,"column":29,"nodeType":"186","endLine":134,"endColumn":108},{"ruleId":"157","severity":1,"message":"187","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":19},{"ruleId":"157","severity":1,"message":"174","line":3,"column":9,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"188","line":14,"column":9,"nodeType":"159","messageId":"160","endLine":14,"endColumn":19},{"ruleId":"157","severity":1,"message":"189","line":18,"column":9,"nodeType":"159","messageId":"160","endLine":18,"endColumn":23},{"ruleId":"157","severity":1,"message":"190","line":22,"column":7,"nodeType":"159","messageId":"160","endLine":22,"endColumn":23},{"ruleId":"157","severity":1,"message":"191","line":26,"column":7,"nodeType":"159","messageId":"160","endLine":26,"endColumn":20},{"ruleId":"157","severity":1,"message":"192","line":30,"column":7,"nodeType":"159","messageId":"160","endLine":30,"endColumn":25},{"ruleId":"157","severity":1,"message":"193","line":36,"column":7,"nodeType":"159","messageId":"160","endLine":36,"endColumn":18},{"ruleId":"157","severity":1,"message":"194","line":59,"column":7,"nodeType":"159","messageId":"160","endLine":59,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":152,"column":85,"nodeType":"170","messageId":"171","endLine":152,"endColumn":87},{"ruleId":"184","severity":1,"message":"185","line":162,"column":25,"nodeType":"186","endLine":162,"endColumn":103},{"ruleId":"157","severity":1,"message":"195","line":175,"column":21,"nodeType":"159","messageId":"160","endLine":175,"endColumn":24},{"ruleId":"196","severity":1,"message":"197","line":124,"column":1,"nodeType":"198","endLine":126,"endColumn":2},{"ruleId":"184","severity":1,"message":"185","line":182,"column":37,"nodeType":"186","endLine":182,"endColumn":65},{"ruleId":"157","severity":1,"message":"199","line":28,"column":7,"nodeType":"159","messageId":"160","endLine":28,"endColumn":20},{"ruleId":"157","severity":1,"message":"200","line":32,"column":7,"nodeType":"159","messageId":"160","endLine":32,"endColumn":14},{"ruleId":"157","severity":1,"message":"201","line":70,"column":7,"nodeType":"159","messageId":"160","endLine":70,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":128,"column":26,"nodeType":"170","messageId":"171","endLine":128,"endColumn":28},{"ruleId":"168","severity":1,"message":"169","line":136,"column":28,"nodeType":"170","messageId":"171","endLine":136,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":139,"column":33,"nodeType":"170","messageId":"171","endLine":139,"endColumn":35},{"ruleId":"184","severity":1,"message":"185","line":244,"column":25,"nodeType":"186","endLine":244,"endColumn":96},{"ruleId":"168","severity":1,"message":"176","line":250,"column":55,"nodeType":"170","messageId":"171","endLine":250,"endColumn":57},{"ruleId":"157","severity":1,"message":"202","line":3,"column":20,"nodeType":"159","messageId":"160","endLine":3,"endColumn":28},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'robot_image' is defined but never used.","Identifier","unusedVar","'ExpPupilSize' is defined but never used.","'ExpPupilOrientation' is defined but never used.","'mapRows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'val' is assigned a value but never used.","'profilePic' is defined but never used.","'objectList' is defined but never used.","'vid' is defined but never used.","Expected '!==' and instead saw '!='.","'ai_image' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'totalCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ProgressBar' is defined but never used.","'imageStyle' is assigned a value but never used.","'divInlineBlock' is assigned a value but never used.","'epiResultWrapper' is assigned a value but never used.","'epiEmotionBar' is assigned a value but never used.","'resultImageWrapper' is assigned a value but never used.","'resultImage' is assigned a value but never used.","'score' is assigned a value but never used.","'key' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'loaderWrapper' is assigned a value but never used.","'spinner' is assigned a value but never used.","'epiPoints' is assigned a value but never used.","'faCoffee' is defined but never used.","no-global-assign","no-unsafe-negation"]